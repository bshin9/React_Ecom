{"ast":null,"code":"var _jsxFileName = \"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js\";\nimport React from \"react\"; // const CommentBox = () => {\n//           return (\n//             <div className=\"commentBox\">\n//               Hello, world! I am a CommentBox.\n//             </div>\n//           );\n//         };\n\nclass CommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/contacts\").then(res => {\n      this.setState({\n        contacts: res.data\n      }, () => console.log(this.state.contacts));\n      console.log(this.state.contacts);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = \"Show Comments\";\n\n    if (this.state.showComments) {\n      buttonText = \"Hide Comments\";\n      commentNodes = React.createElement(\"div\", {\n        className: \"comment-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, comments);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Join the Discussion!\"), React.createElement(CommentForm, {\n      addComment: this._addComment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"comment-reveal\",\n      onClick: this._handleClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, buttonText), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"h4\", {\n      className: \"comment-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this._getCommentsTitle(comments.length)), commentNodes);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return React.createElement(Comment, {\n        author: comment.author,\n        body: comment.body,\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return \"No comments yet\";\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return \"\".concat(commentCount, \" comments\");\n    }\n  }\n\n} // end CommentBox component\n\n\nclass CommentForm extends React.Component {\n  render() {\n    return React.createElement(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comment-form-fields\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Name\",\n      required: true,\n      ref: input => this._author = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      placeholder: \"Comment\",\n      rows: \"4\",\n      required: true,\n      ref: textarea => this._body = textarea,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"comment-form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Post Comment\")));\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"comment-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.props.author), React.createElement(\"p\", {\n      className: \"comment-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"- \", this.props.body), React.createElement(\"div\", {\n      className: \"comment-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      className: \"comment-footer-delete\",\n      onClick: this._deleteComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Delete Comment\")));\n  }\n\n}\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js"],"names":["React","CommentBox","Component","state","contacts","componentDidMount","axios","get","then","res","setState","data","console","log","catch","err","render","comments","_getComments","commentNodes","buttonText","showComments","_addComment","bind","_handleClick","_getCommentsTitle","length","author","body","comment","id","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// const CommentBox = () => {\n//           return (\n//             <div className=\"commentBox\">\n//               Hello, world! I am a CommentBox.\n//             </div>\n//           );\n//         };\n\nclass CommentBox extends React.Component {\n  state = {\n    contacts: []\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/api/contacts\")\n      .then(res => {\n        this.setState({ contacts: res.data }, () =>\n          console.log(this.state.contacts)\n        );\n        console.log(this.state.contacts);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    const comments = this._getComments();\n    let commentNodes;\n    let buttonText = \"Show Comments\";\n\n    if (this.state.showComments) {\n      buttonText = \"Hide Comments\";\n      commentNodes = <div className=\"comment-list\">{comments}</div>;\n    }\n\n    return (\n      <div className=\"comment-box\">\n        <h2>Join the Discussion!</h2>\n        <CommentForm addComment={this._addComment.bind(this)} />\n        <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\n          {buttonText}\n        </button>\n        <h3>Comments</h3>\n        <h4 className=\"comment-count\">\n          {this._getCommentsTitle(comments.length)}\n        </h4>\n        {commentNodes}\n      </div>\n    );\n  } // end render\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return (\n        <Comment author={comment.author} body={comment.body} key={comment.id} />\n      );\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return \"No comments yet\";\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n} // end CommentBox component\n\nclass CommentForm extends React.Component {\n  render() {\n    return (\n      <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\n        <div className=\"comment-form-fields\">\n          <input\n            placeholder=\"Name\"\n            required\n            ref={input => (this._author = input)}\n          ></input>\n          <br />\n          <textarea\n            placeholder=\"Comment\"\n            rows=\"4\"\n            required\n            ref={textarea => (this._body = textarea)}\n          ></textarea>\n        </div>\n        <div className=\"comment-form-actions\">\n          <button type=\"submit\">Post Comment</button>\n        </div>\n      </form>\n    );\n  } // end render\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n} // end CommentForm component\n\nclass Comment extends React.Component {\n  render() {\n    return (\n      <div className=\"comment\">\n        <p className=\"comment-header\">{this.props.author}</p>\n        <p className=\"comment-body\">- {this.props.body}</p>\n        <div className=\"comment-footer\">\n          <a\n            href=\"#\"\n            className=\"comment-footer-delete\"\n            onClick={this._deleteComment}\n          >\n            Delete Comment\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}