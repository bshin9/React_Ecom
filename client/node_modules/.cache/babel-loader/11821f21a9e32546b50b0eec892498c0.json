{"ast":null,"code":"var _jsxFileName = \"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass CommentBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // showComments: false,\n      contacts: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/api/contacts\").then(res => {\n      this.setState({\n        contacts: res.data\n      }, () => console.log(this.state.contacts));\n      console.log(this.state.contacts);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"getContacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.state.contacts && this.state.contacts.map(contacts => React.createElement(Card, {\n      user_name: contacts.product_name,\n      price: product.price,\n      description: product.product_description,\n      image: product.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n} //       const contacts = this._getComments();\n//       let commentNodes;\n//       let buttonText = 'Show Comments';\n//       if (this.state.showComments) {\n//         buttonText = 'Hide Comments';\n//         commentNodes = <div className=\"comment-list\">{contacts}</div>;\n//       }\n//       return(\n//         <div className=\"comment-box\">\n//           <h2>Join the Discussion!</h2>\n//           <CommentForm addComment={this._addComment.bind(this)}/>\n//           <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\n//             {buttonText}\n//           </button>\n//           <h3>Comments</h3>\n//           <h4 className=\"comment-count\">\n//             {this._getCommentsTitle(contacts.length)}\n//           </h4>\n//           {commentNodes}\n//         </div>  \n//       );\n//     } // end render\n//     _addComment(author, body) {\n//       const contacts = {\n//         id: this.state.comments.length + 1,\n//         author,\n//         body\n//       };\n//       this.setState({ comments: this.state.contacts.concat([contacts]) }); // *new array references help React stay fast, so concat works better than push here.\n//     }\n//     _handleClick() {\n//       this.setState({\n//         showComments: !this.state.showComments\n//       });\n//     }\n//     _getComments() {    \n//       return this.state.contacts.map((contacts) => { \n//         return (\n//           <Comment \n//             user_name={contacts.user_name} \n//             message={contacts.message} \n//             key={contacts.id} />\n//         ); \n//       });\n//     }\n//     _getCommentsTitle(commentCount) {\n//       if (commentCount === 0) {\n//         return 'No comments yet';\n//       } else if (commentCount === 1) {\n//         return \"1 comment\";\n//       } else {\n//         return `${commentCount} comments`;\n//       }\n//     }\n//   } // end CommentBox component\n//   class CommentForm extends React.Component {\n//     render() {\n//       return (\n//         <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\n//           <div className=\"comment-form-fields\">\n//             <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\n//             <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\n//           </div>\n//           <div className=\"comment-form-actions\">\n//             <button type=\"submit\">Post Comment</button>\n//           </div>\n//         </form>\n//       );\n//     } // end render\n//     _handleSubmit(event) { \n//       event.preventDefault();   // prevents page from reloading on submit\n//       let author = this._author;\n//       let body = this._body;\n//       this.props.addComment(author.value, body.value);\n//     }\n//   } // end CommentForm component\n//   class Comment extends React.Component {\n//     render () {\n//       return(\n//         <div className=\"comment\">\n//           <p className=\"comment-header\">{this.props.author}</p>\n//           <p className=\"comment-body\">- {this.props.body}</p>\n//           <div className=\"comment-footer\">\n//             <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\n//           </div>\n//         </div>\n//       );\n//     }\n//   }\n\n\nexport default CommentBox;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js"],"names":["React","axios","CommentBox","Component","state","contacts","componentDidMount","get","then","res","setState","data","console","log","catch","err","render","map","product_name","product","price","product_description","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACJ;AACAC,MAAAA,QAAQ,EAAE;AAFN,KAF6B;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,KAAK,CACFM,GADH,CACO,eADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAhB,OAAd,EAAsC,MACpCC,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,QAAvB,CADF;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,QAAvB;AACD,KAPH,EAQGS,KARH,CAQSC,GAAG,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAVH;AAWD;;AAEDC,EAAAA,MAAM,GAAI;AACF,WAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKZ,KAAL,CAAWC,QAAX,IACC,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBZ,QAAQ,IAC9B,oBAAC,IAAD;AACE,MAAA,SAAS,EAAEA,QAAQ,CAACa,YADtB;AAEE,MAAA,KAAK,EAAEC,OAAO,CAACC,KAFjB;AAGE,MAAA,WAAW,EAAED,OAAO,CAACE,mBAHvB;AAIE,MAAA,KAAK,EAAEF,OAAO,CAACG,KAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFJ;AAcD;;AApC8B,C,CA2CzC;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA,eAAepB,UAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\n\n        \nclass CommentBox extends React.Component {\n    \n    state = {\n        // showComments: false,\n        contacts: []\n      };\n  \n    componentDidMount() {\n      axios\n        .get(\"/api/contacts\")\n        .then(res => {\n          this.setState({ contacts: res.data }, () =>\n            console.log(this.state.contacts)\n          );\n          console.log(this.state.contacts);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n    \n    render () {\n            return (\n\n                <div className=\"getContacts\">\n                {this.state.contacts &&\n                  this.state.contacts.map(contacts => (\n                    <Card\n                      user_name={contacts.product_name}\n                      price={product.price}\n                      description={product.product_description}\n                      image={product.image}\n                    />\n                  ))}\n              </div>\n            );\n          };\n        }\n\n\n        \n\n\n//       const contacts = this._getComments();\n//       let commentNodes;\n//       let buttonText = 'Show Comments';\n      \n//       if (this.state.showComments) {\n//         buttonText = 'Hide Comments';\n//         commentNodes = <div className=\"comment-list\">{contacts}</div>;\n//       }\n      \n//       return(\n//         <div className=\"comment-box\">\n//           <h2>Join the Discussion!</h2>\n//           <CommentForm addComment={this._addComment.bind(this)}/>\n//           <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\n//             {buttonText}\n//           </button>\n//           <h3>Comments</h3>\n//           <h4 className=\"comment-count\">\n//             {this._getCommentsTitle(contacts.length)}\n//           </h4>\n//           {commentNodes}\n//         </div>  \n//       );\n//     } // end render\n    \n//     _addComment(author, body) {\n//       const contacts = {\n//         id: this.state.comments.length + 1,\n//         author,\n//         body\n//       };\n//       this.setState({ comments: this.state.contacts.concat([contacts]) }); // *new array references help React stay fast, so concat works better than push here.\n//     }\n    \n//     _handleClick() {\n//       this.setState({\n//         showComments: !this.state.showComments\n//       });\n//     }\n    \n//     _getComments() {    \n//       return this.state.contacts.map((contacts) => { \n//         return (\n//           <Comment \n//             user_name={contacts.user_name} \n//             message={contacts.message} \n//             key={contacts.id} />\n//         ); \n//       });\n//     }\n    \n//     _getCommentsTitle(commentCount) {\n//       if (commentCount === 0) {\n//         return 'No comments yet';\n//       } else if (commentCount === 1) {\n//         return \"1 comment\";\n//       } else {\n//         return `${commentCount} comments`;\n//       }\n//     }\n//   } // end CommentBox component\n  \n//   class CommentForm extends React.Component {\n//     render() {\n//       return (\n//         <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\n//           <div className=\"comment-form-fields\">\n//             <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\n//             <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\n//           </div>\n//           <div className=\"comment-form-actions\">\n//             <button type=\"submit\">Post Comment</button>\n//           </div>\n//         </form>\n//       );\n//     } // end render\n    \n//     _handleSubmit(event) { \n//       event.preventDefault();   // prevents page from reloading on submit\n//       let author = this._author;\n//       let body = this._body;\n//       this.props.addComment(author.value, body.value);\n//     }\n//   } // end CommentForm component\n  \n//   class Comment extends React.Component {\n//     render () {\n//       return(\n//         <div className=\"comment\">\n//           <p className=\"comment-header\">{this.props.author}</p>\n//           <p className=\"comment-body\">- {this.props.body}</p>\n//           <div className=\"comment-footer\">\n//             <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\n//           </div>\n//         </div>\n//       );\n//     }\n//   }\n  \n  \n  \n\nexport default CommentBox;"]},"metadata":{},"sourceType":"module"}