{"ast":null,"code":"import _classCallCheck from\"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import EditComment from\"./EditComment\";var CommentBox=/*#__PURE__*/function(_React$Component){_inherits(CommentBox,_React$Component);function CommentBox(){var _getPrototypeOf2;var _this;_classCallCheck(this,CommentBox);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(CommentBox)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={contacts:[]};return _this;}_createClass(CommentBox,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var url=\"http://localhost:8000/api/contacts\";fetch(url).then(function(response){return response.json();}).then(function(data){_this2.setState({contacts:data});}).catch(function(error){console.log('BAD',error);});}// We want to map through the contacts using state just like how we did the products\n// We use this so that we can call GetContact\n},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"getContact\"},this.state.contacts&&this.state.contacts.map(function(contacts){return React.createElement(EditComment,{contact_id:contacts.contact_id,user_name:contacts.user_name,message:contacts.message});}));}}]);return CommentBox;}(React.Component);export default CommentBox;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.jsx"],"names":["React","EditComment","CommentBox","state","contacts","url","fetch","then","response","json","data","setState","catch","error","console","log","map","contact_id","user_name","message","Component"],"mappings":"k5BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,GAEMC,CAAAA,U,2ZACJC,K,CAAQ,CACNC,QAAQ,CAAE,EADJ,C,mGAIY,iBAClB,GAAMC,CAAAA,GAAG,CAAG,oCAAZ,CACAC,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,SAACC,QAAD,CAAc,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CAHD,EAIGF,IAJH,CAIQ,SAACG,IAAD,CAAU,CACd,MAAI,CAACC,QAAL,CAAc,CAACP,QAAQ,CAACM,IAAV,CAAd,EACD,CANH,EAOCE,KAPD,CAOO,SAACC,KAAD,CAAW,CAChBC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,KAAnB,EACD,CATD,EAUD,CACD;AACA;uCACS,CACP,MAEE,4BAAK,SAAS,CAAC,YAAf,EACG,KAAKV,KAAL,CAAWC,QAAX,EACC,KAAKD,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwB,SAAAZ,QAAQ,QAC9B,qBAAC,WAAD,EACE,UAAU,CAAEA,QAAQ,CAACa,UADvB,CAEE,SAAS,CAAEb,QAAQ,CAACc,SAFtB,CAGE,OAAO,CAAEd,QAAQ,CAACe,OAHpB,EAD8B,EAAhC,CAFJ,CAFF,CAcD,C,wBAnCsBnB,KAAK,CAACoB,S,EAsC/B,cAAelB,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport EditComment from \"./EditComment\";\n\nclass CommentBox extends React.Component {\n  state = {\n    contacts: []\n  };\n\n  componentDidMount() {\n    const url = \"http://localhost:8000/api/contacts\";\n    fetch(url)\n    .then((response) => {\n      return response.json();\n    })\n      .then((data) => {\n        this.setState({contacts:data})\n      })\n    .catch((error) => {\n      console.log('BAD', error)\n    });\n  }\n  // We want to map through the contacts using state just like how we did the products\n  // We use this so that we can call GetContact\n  render() {\n    return (\n      \n      <div className=\"getContact\">\n        {this.state.contacts &&\n          this.state.contacts.map(contacts => (\n            <EditComment\n              contact_id={contacts.contact_id}\n              user_name={contacts.user_name}\n              message={contacts.message}\n            />\n          ))}\n      </div>\n      \n    );\n  }\n}\n\nexport default CommentBox;\n"]},"metadata":{},"sourceType":"module"}