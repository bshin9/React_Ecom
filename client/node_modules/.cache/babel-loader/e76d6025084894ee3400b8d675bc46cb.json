{"ast":null,"code":"var _jsxFileName = \"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js\";\nimport React from \"react\"; // const CommentBox = () => {\n//           return (\n//             <div className=\"commentBox\">\n//               Hello, world! I am a CommentBox.\n//             </div>\n//           );\n//         };\n\nvar commentData = [{\n  author: \"Shawn Spencer\",\n  text: \"I've heard it both ways\"\n}, {\n  author: \"Burton Guster\",\n  text: \"You hear about Pluto? That's messed up\"\n}];\nvar CommentBox = React.createClass({\n  displayName: \"CommentBox\",\n  getInitialState: function () {\n    return {\n      data: commentData\n    };\n  },\n  handleCommentSubmit: function (comment) {\n    this.props.data.push(comment);\n    var comments = this.state.data;\n    var newComments = comments.concat([comment]);\n    this.setState({\n      data: newComments\n    });\n  },\n  render: function () {\n    return React.createElement(\"div\", {\n      className: \"comment-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CommentForm, {\n      data: this.props.data,\n      onCommentSubmit: this.handleCommentSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(CommentList, {\n      data: this.props.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n});\nvar CommentList = React.createClass({\n  displayName: \"CommentList\",\n  render: function () {\n    return React.createElement(\"div\", {\n      className: \"comment-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.data.map(function (c) {\n      return React.createElement(Comment, {\n        author: c.author,\n        text: c.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    }));\n  }\n});\nvar CommentForm = React.createClass({\n  displayName: \"CommentForm\",\n  handleSubmit: function (e) {\n    e.preventDefault();\n    var authorVal = e.target[0].value.trim();\n    var textVal = e.target[1].value.trim();\n\n    if (!textVal || !authorVal) {\n      return;\n    }\n\n    this.props.onCommentSubmit({\n      author: authorVal,\n      text: textVal\n    });\n    e.target[0].value = '';\n    e.target[1].value = '';\n    return;\n  },\n  render: function () {\n    return React.createElement(\"form\", {\n      className: \"comment-form form-group\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Your name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Say something...\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Post\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n});\nvar Comment = React.createClass({\n  displayName: \"Comment\",\n  render: function () {\n    return React.createElement(\"div\", {\n      className: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.author), this.props.text);\n  }\n});\nexport default CommentBox;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/components/Commentbox.js"],"names":["React","commentData","author","text","CommentBox","createClass","getInitialState","data","handleCommentSubmit","comment","props","push","comments","state","newComments","concat","setState","render","CommentList","map","c","CommentForm","handleSubmit","e","preventDefault","authorVal","target","value","trim","textVal","onCommentSubmit","Comment"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// const CommentBox = () => {\n//           return (\n//             <div className=\"commentBox\">\n//               Hello, world! I am a CommentBox.\n//             </div>\n//           );\n//         };\n        var commentData = [\n            { \n              author:\"Shawn Spencer\", \n              text:\"I've heard it both ways\"\n            },\n            { \n              author:\"Burton Guster\", \n              text:\"You hear about Pluto? That's messed up\" \n            }\n          ];\n          var CommentBox = React.createClass({\n            getInitialState: function() {\n              return {\n                data: commentData\n              }\n            },\n            handleCommentSubmit: function(comment) {\n              this.props.data.push(comment);\n              var comments = this.state.data;\n              var newComments = comments.concat([comment]);\n              this.setState({data: newComments});\n            },\n            render: function() {\n              return (\n                <div className=\"comment-box\">\n                  <CommentForm data={this.props.data} onCommentSubmit={this.handleCommentSubmit} />\n                  <CommentList data={this.props.data} />\n                </div>\n              );\n            }\n          });\n          var CommentList = React.createClass({\n            render: function() {\n              return (\n                <div className=\"comment-list\">\n                  {this.props.data.map(function(c){\n                    return (\n                      <Comment author={c.author} text={c.text} />\n                    );\n                  })}\n                </div>\n              );\n            }\n          });\n          var CommentForm = React.createClass({\n            handleSubmit: function(e) {\n              e.preventDefault();\n              var authorVal = e.target[0].value.trim();\n              var textVal = e.target[1].value.trim();\n              if (!textVal || !authorVal) {\n                return;\n              }\n              this.props.onCommentSubmit({author: authorVal, text: textVal});\n              e.target[0].value = '';\n              e.target[1].value = '';\n              return;\n            },\n            render: function() {\n              return(\n                <form className=\"comment-form form-group\" onSubmit={this.handleSubmit}>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-addon\">Name</span>\n                    <input type=\"text\" placeholder=\"Your name\" className=\"form-control\" />\n                  </div>\n                  <div className=\"input-group\">\n                    <span className=\"input-group-addon\">Comment</span>\n                    <input type=\"text\" placeholder=\"Say something...\" className=\"form-control\" />\n                  </div>\n                  <input type=\"submit\" value=\"Post\" className=\"btn btn-primary\" />\n                </form>\n              );\n            }\n          });\n          var Comment = React.createClass({\n            render: function() {\n              return (\n                <div className=\"comment\">\n                  <h2 className=\"author\">{this.props.author}</h2>\n                  {this.props.text}\n                </div>\n              );\n            }\n          });\n\nexport default CommentBox;"]},"metadata":{},"sourceType":"module"}