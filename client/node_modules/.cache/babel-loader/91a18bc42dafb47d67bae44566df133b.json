{"ast":null,"code":"var _jsxFileName = \"/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/pages/Contact.js\";\nimport React from \"react\";\nimport CommentBox from \"../components/Commentbox\";\nimport axios from \"axios\";\nimport \"../CSS/Contactpage.css\";\nconst initialState = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\",\n  user_name: \"\",\n  message: \"\",\n  usernameError: \"\",\n  emailError: \"\",\n  firstnameError: \"\",\n  lastnameError: \"\",\n  messageError: \"\"\n}; // create Contact class\n\nclass Contact extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.updateFirstname = e => {\n      this.setState({\n        firstname: e.target.value\n      });\n    };\n\n    this.updateLastname = e => {\n      this.setState({\n        lastname: e.target.value\n      });\n    };\n\n    this.updateEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.updateUsername = e => {\n      this.setState({\n        user_name: e.target.value\n      });\n    };\n\n    this.updateMessage = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.validate = () => {\n      let usernameError = \"\";\n      let emailError = \"\";\n      let firstnameError = \"\";\n      let lastnameError = \"\";\n      let messageError = \"\";\n\n      if (!this.state.user_name) {\n        usernameError = \"username cannot be blank\";\n      }\n\n      if (!this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (!this.state.firstname) {\n        firstnameError = \"field cannot be blank\";\n      }\n\n      if (!this.state.lastname) {\n        lastnameError = \"field cannot be blank\";\n      }\n\n      if (!this.state.message) {\n        messageError = \"needs a message\";\n      }\n\n      if (emailError || usernameError || firstnameError || lastnameError || messageError) {\n        this.setState({\n          usernameError,\n          emailError,\n          firstnameError,\n          lastnameError,\n          messageError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const isValid = this.validate();\n\n      if (isValid) {\n        console.log(this.state); // clearing the form here by calling initialState\n\n        axios.post('http://localhost:8000/api/newcontact', {\n          // payload\n          firstname: this.state.firstname,\n          lastname: this.state.lastname,\n          email: this.state.email,\n          user_name: this.state.user_name,\n          message: this.state.message\n        }).then(res => {\n          console.log(\"Passing\");\n        }).catch(err => {\n          console.log(err);\n        });\n        this.setState(initialState);\n      }\n\n      if (!isValid) {\n        console.log('error', isValid);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"header2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"section\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Contact Us!\"), React.createElement(\"hr\", {\n      width: \"30%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"If you have any questions we are here for you!\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 mx-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-sm\",\n      id: \"user_name\",\n      placeholder: \"Username\",\n      value: this.state.user_name,\n      onChange: this.updateUsername,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"#DD3514\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.usernameError)), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control form-control-sm\",\n      id: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.updateEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"#DD3514\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.emailError)), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-sm\",\n      id: \"firstname\",\n      placeholder: \"First Name\",\n      value: this.state.firstname,\n      onChange: this.updateFirstname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"#DD3514\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.firstnameError)), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control form-control-sm\",\n      id: \"lastname\",\n      placeholder: \"Last Name\",\n      value: this.state.lastname,\n      onChange: this.updateLastname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"#DD3514\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.lastnameError)), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control form-control-sm\",\n      id: \"message\",\n      placeholder: \"Comments\",\n      value: this.state.message,\n      onChange: this.updateMessage,\n      rows: 3,\n      defaultValue: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"#DD3514\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.messageError)), React.createElement(\"input\", {\n      onSubmit: this.handleSubmit,\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-outline-info btn-block\",\n      id: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"See What Our Customers Are Saying!\"), React.createElement(CommentBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/changhyunshin/Documents/React_Ecom/my-react-app/client/src/pages/Contact.js"],"names":["React","CommentBox","axios","initialState","firstname","lastname","email","user_name","message","usernameError","emailError","firstnameError","lastnameError","messageError","Contact","Component","state","updateFirstname","e","setState","target","value","updateLastname","updateEmail","updateUsername","updateMessage","validate","includes","handleSubmit","event","preventDefault","isValid","console","log","post","then","res","catch","err","render","fontSize","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CommentBox from \"../components/Commentbox\"\nimport axios from \"axios\";\nimport \"../CSS/Contactpage.css\";\n\nconst initialState = {\n  firstname: \"\",\n  lastname: \"\",\n  email: \"\",\n  user_name: \"\",\n  message: \"\",\n  usernameError: \"\",\n  emailError: \"\",\n  firstnameError: \"\",\n  lastnameError: \"\",\n  messageError: \"\"\n}\n\n// create Contact class\nclass Contact extends React.Component {\n// created state inside of class component to refer to the contact database\n  state = initialState;\n\n  // created update functions for each field I have\n  updateFirstname = (e) => {\n    this.setState({ firstname: e.target.value });\n  }\n\n  updateLastname = (e) => {\n    this.setState({ lastname: e.target.value });\n  }\n\n  updateEmail = (e) => {\n    this.setState({ email: e.target.value });\n  }\n\n  updateUsername = (e) => {\n    this.setState({ user_name: e.target.value });\n  }\n\n  updateMessage = (e) => {\n    this.setState({ message: e.target.value });\n  }\n\n  validate = () => {\n    let usernameError = \"\";\n    let emailError = \"\";\n    let firstnameError = \"\";\n    let lastnameError = \"\";\n    let messageError = \"\";\n    \n    if (!this.state.user_name) {\n      usernameError = \"username cannot be blank\"\n    }\n    \n    if (!this.state.email.includes(\"@\")) {\n      emailError = \"invalid email\";\n    }\n\n    if (!this.state.firstname) {\n      firstnameError = \"field cannot be blank\"\n    }\n    \n    if (!this.state.lastname) {\n      lastnameError = \"field cannot be blank\"\n    }\n\n    if (!this.state.message) {\n      messageError = \"needs a message\"\n    }\n\n    if (emailError || usernameError || firstnameError || lastnameError || messageError) {\n      this.setState({ usernameError, emailError, firstnameError, lastnameError, messageError });\n      return false;\n    }\n    return true;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      console.log(this.state);\n      // clearing the form here by calling initialState\n      axios.post('http://localhost:8000/api/newcontact', {\n        // payload\n         firstname:this.state.firstname,\n         lastname:this.state.lastname,\n         email:this.state.email,\n         user_name:this.state.user_name,\n         message:this.state.message\n      })\n      .then(res => {\n        console.log(\"Passing\");\n      })\n      .catch(err => {\n        console.log(err);\n      });\n      this.setState(initialState);\n    }\n    if (!isValid) {\n      console.log('error', isValid);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Contact\">\n        {/* HEADER */}\n        <section id=\"header2\">\n          <div className=\"container text-center\">\n            <div className=\"row\"></div>\n          </div>\n        </section>\n        {/* Contact */}\n        <section id=\"contact\">\n          <div className=\"container text-center\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <h2>Contact Us!</h2>\n                <hr width=\"30%\" />\n                <p>If you have any questions we are here for you!</p>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-8 mx-auto\">\n                <form onSubmit={this.handleSubmit}>\n                <fieldset className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm\"\n                      id=\"user_name\"\n                      placeholder=\"Username\"\n                      value={this.state.user_name}\n                      onChange={this.updateUsername}\n                    />\n                    <div style={{fontSize: 12, color: \"#DD3514\"}}>{this.state.usernameError}</div>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      className=\"form-control form-control-sm\"\n                      id=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.updateEmail}\n                    />\n                    <div style={{fontSize: 12, color: \"#DD3514\"}}>{this.state.emailError}</div>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm\"\n                      id=\"firstname\"\n                      placeholder=\"First Name\"\n                      value={this.state.firstname}\n                      onChange={this.updateFirstname}\n                    />\n                    <div style={{fontSize: 12, color: \"#DD3514\"}}>{this.state.firstnameError}</div>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control form-control-sm\"\n                      id=\"lastname\"\n                      placeholder=\"Last Name\"\n                      value={this.state.lastname}\n                      onChange={this.updateLastname}\n                    />\n                    <div style={{fontSize: 12, color: \"#DD3514\"}}>{this.state.lastnameError}</div>\n                  </fieldset>\n                  <fieldset className=\"form-group\">\n                    <textarea\n                      className=\"form-control form-control-sm\"\n                      id=\"message\"\n                      placeholder=\"Comments\"\n                      value={this.state.message}\n                      onChange={this.updateMessage}\n                      rows={3}\n                      defaultValue={\"\"}\n                    />\n                    <div style={{fontSize: 12, color: \"#DD3514\"}}>{this.state.messageError}</div>\n                  </fieldset>\n                  <input\n                    onSubmit={this.handleSubmit}\n                    type=\"submit\"\n                    value=\"Submit\"\n                    className=\"btn btn-outline-info btn-block\" id=\"btn\"\n                  />\n                </form>\n                <h1>See What Our Customers Are Saying!</h1>\n                {/* Calling the CommentBox here to retrieve the data from it */}\n                <CommentBox />\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}